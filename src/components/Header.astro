---
import NavBar from './NavBar.astro'
import NavigationLink from './solid/blocks/NavigationLink.tsx'

type Props = {
  title: string
  subTitle: string | undefined
};

const { title, subTitle } = Astro.props;

---

<header
	id="header"
	class="max-md:top-0 max-md:sticky z-10 py-1.5 sm:py-3 md:pt-8 flex md:flex-col md:flex-nowrap items-center bg-white max-md:data-[scrolled]:shadow-[0_10px_20px_10px_rgba(75,75,75,.25)] transition-shadow ease-in">
	<!-- <div id="header-container" class="py-1.5 sm:py-3 md:pt-8 flex md:flex-col md:flex-nowrap items-center bg-white active:shadow-[0_10px_20px_10px_rgba(75,75,75,.25)]"> -->
		<div class="flex flex-col items-center max-md:order-2 max-md:m-auto max-md:-ml-16 max-sm:max-w-[60%]">
			<h1 class="text-4xl text-center font-bold max-sm:text-2xl transition-all duration-300">
				<NavigationLink href="/" getCurrentPath={() => Astro.url.pathname as string} >
					{title}
				</NavigationLink>
			</h1>
			{subTitle && <p class="text-base pt-3.5 italic subpixel-antialiased max-sm:hidden border-b px-3">{subTitle}</p>}
		</div>
		<div class="max-md:mr-auto">
			<NavBar />
		</div>
	<!-- </div> -->
</header>

<script>
	const header = document.getElementById("header");
	const intercept = document.createElement("div");

	intercept.setAttribute("data-observer-intercept", "");
	header?.before(intercept);

	const observer = new IntersectionObserver(([entry]) => {
		header?.toggleAttribute("data-scrolled", !entry.isIntersecting);
	});

	observer.observe(intercept);
</script>
