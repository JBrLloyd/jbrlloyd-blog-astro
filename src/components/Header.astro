---
import NavBar from './NavBar.astro'
import MobileNavMenu from './MobileNavMenu.astro';
import { NavigationLink } from "@solidComponents/blocks";

type Props = {
  title: string
  subTitle: string | undefined
};

const { title, subTitle } = Astro.props;

---

<header
	id="header"
	class="max-md:top-0 max-md:sticky z-10 max-md:py-1.5 md:pt-8 flex md:flex md:flex-col md:flex-nowrap
		items-center bg-white
		max-md:data-[scrolled]:shadow-[0_5px_20px_10px_rgba(25,25,25,.5)] transition-shadow ease-in
	"
>
	<div class="flex flex-col items-center max-md:order-2 max-md:m-auto">
		<NavigationLink href="/" getCurrentPath={() => Astro.url.pathname as string} >
			<h1
				class="text-4xl text-center font-bold max-sm:text-2xl
				transition-all duration-300"
			>
				{title}
			</h1>
		</NavigationLink>
		{subTitle && <p class="text-base pt-1 mm:pt-3.5 italic subpixel-antialiased max-sm:hidden md:border-b px-3">{subTitle}</p>}
	</div>

	<nav class="">

		<div class="md:hidden pl-8 max-sm:pl-2">
			<MobileNavMenu />
		</div>

		<div class="max-md:hidden text-lg select-none flex-row items-center align-middle mt-2">
			<NavBar />
		</div>

	</nav>

</header>

<script>
	const header = document.getElementById("header");
	const intercept = document.createElement("div");

	intercept.setAttribute("data-observer-intercept", "");
	header?.before(intercept);

	const observer = new IntersectionObserver(([entry]) => {
		header?.toggleAttribute("data-scrolled", !entry.isIntersecting);
	});

	observer.observe(intercept);
</script>
